<?xml version="1.0" encoding="UTF-8"?>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.2.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                               http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

  <cm:property-placeholder id="config" persistent-id="jms.bridger" update-strategy="reload">
    <cm:default-properties>
      <cm:property name="simulateProcessingError" value="false" />
      <cm:property name="errorAfterMsgs" value="0" />
      <cm:property name="sourceBrokerUrl" value="tcp://localhost:61616" />
      <cm:property name="targetBrokerUrl" value="tcp://localhost:61616" />
      <cm:property name="username" value="admin" />
      <cm:property name="password" value="admin" />
    </cm:default-properties>
  </cm:property-placeholder>

  <!--<ext:property-placeholder placeholder-prefix="$[" placeholder-suffix="}" system-properties="never" />-->

  <!-- ***************************************************************** -->
  <!-- JTA/XA Global Transaction Management -->
  <reference id="platformTxManager" interface="org.springframework.transaction.PlatformTransactionManager" availability="mandatory"/>
  <reference id="recoverableTxManager" interface="org.apache.geronimo.transaction.manager.RecoverableTransactionManager" availability="mandatory" />

  <bean id="requiredJta" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
    <property name="transactionManager" ref="platformTxManager" />
    <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
  </bean>


  <!-- ***************************************************************** -->
  <!-- Source ActiveMQ configuration -->
  <bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
    <property name="initialRedeliveryDelay" value="5000" />
    <property name="redeliveryDelay" value="5000" />
    <property name="maximumRedeliveries" value="2" />
  </bean>

  <bean id="AmqXaCF" class="org.apache.activemq.ActiveMQXAConnectionFactory">
    <property name="brokerURL" value="${sourceBrokerUrl}" />
    <property name="userName" value="${username}" />
    <property name="password" value="${password}" />
    <property name="redeliveryPolicy" ref="redeliveryPolicy" />
  </bean>

  <bean id="XAPooledCF" class="org.apache.activemq.pool.JcaPooledConnectionFactory" init-method="start" destroy-method="stop">
    <property name="name" value="activemq.source" />
    <property name="maxConnections" value="1" />
    <property name="connectionFactory" ref="AmqXaCF" />
    <property name="transactionManager" ref="recoverableTxManager" />
  </bean>

  <bean id="XAJmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
    <property name="connectionFactory" ref="XAPooledCF" />
    <!-- We set local transactions to false, because the JtaTransactionManager
         will take care of enrolling the XA JMS Connection when needed.
    -->
    <property name="transacted" value="false" />
    <property name="transactionManager" ref="platformTxManager" />
    <property name="maxConcurrentConsumers" value="1" />
    <property name="cacheLevelName" value="CACHE_NONE" />
  </bean>

  <bean id="rm-source-amq" class="org.apache.activemq.pool.ActiveMQResourceManager" init-method="recoverResource">
    <property name="transactionManager" ref="recoverableTxManager" />
    <!-- CF must be of type ActiveMQConnectionFactory, otherwise no recovery will occur -->
    <property name="connectionFactory" ref="AmqXaCF" />
    <property name="userName" value="${username}" />
    <property name="password" value="${password}" />
    <!-- name needs to match name property set on JcaPooledConnectionFactory above -->
    <property name="resourceName" value="activemq.source" />
  </bean>

  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="XAJmsConfig" />
  </bean>


  <!-- ***************************************************************** -->
  <!-- Target ActiveMQ Configuration -->
  <bean id="AmqXaCF-2" class="org.apache.activemq.ActiveMQXAConnectionFactory">
    <property name="brokerURL" value="${targetBrokerUrl}" />
    <property name="userName" value="${username}" />
    <property name="password" value="${password}" />
    <property name="redeliveryPolicy" ref="redeliveryPolicy" />
  </bean>

  <bean id="XAPooledCF-2" class="org.apache.activemq.pool.JcaPooledConnectionFactory" init-method="start" destroy-method="stop">
    <property name="name" value="activemq.target" />
    <property name="maxConnections" value="1" />
    <property name="connectionFactory" ref="AmqXaCF-2" />
    <property name="transactionManager" ref="recoverableTxManager" />
  </bean>

  <bean id="XAJmsConfig-2" class="org.apache.camel.component.jms.JmsConfiguration">
    <property name="connectionFactory" ref="XAPooledCF-2" />
    <!-- We set local transactions to false, because the JtaTransactionManager
      will take care of enrolling the XA JMS Connection when needed.
    -->
    <property name="transacted" value="false" />
    <property name="transactionManager" ref="platformTxManager" />
    <property name="maxConcurrentConsumers" value="1" />
    <property name="cacheLevelName" value="CACHE_NONE" />
  </bean>

  <bean id="rm-target-amq" class="org.apache.activemq.pool.ActiveMQResourceManager" init-method="recoverResource">
    <property name="transactionManager" ref="recoverableTxManager" />
    <!-- CF must be of type ActiveMQConnectionFactory, otherwise no recovery will occur -->
    <property name="connectionFactory" ref="AmqXaCF-2" />
    <property name="userName" value="${username}" />
    <property name="password" value="${password}" />
    <!-- name needs to match name property set on JcaPooledConnectionFactory above -->
    <property name="resourceName" value="activemq.target" />
  </bean>

  <bean id="activemq-2" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="XAJmsConfig-2" />
  </bean>


  <!-- ***************************************************************** -->
  <!-- Custom Camel Processor to be called in route
       Can be used to simulate tx rollback
  -->
  <bean class="org.apache.camel.demo.TestProcessor" id="testProcessor" >
    <property name="simulateProcessingError" value="${simulateProcessingError}" />
    <property name="errorAfterMsgs" value="${errorAfterMsgs}" />
  </bean>


  <bean class="org.swinchester.QueueToQueueRouteBuilder" id="q2qrb" />

  <!-- ***************************************************************** -->
  <!-- Camel Route Definition -->
  <camelContext xmlns="http://camel.apache.org/schema/blueprint" trace="true">
    <routeBuilder ref="q2qrb" />
  </camelContext>

  <!--<camelContext id="log-example-context" xmlns="http://camel.apache.org/schema/blueprint" >-->

  <!--&lt;!&ndash;-->
  <!--A very simple Camel route, that uses a timer to trigger a message every 5 second.-->

  <!--The <setBody> sets a body into the Camel Message.-->

  <!--The <log/> elements are used to add human-friendly business logging statements. They make it easier to see what the-->
  <!--route is doing.-->
  <!--&ndash;&gt;-->
  <!--<route id="log-route">-->
  <!--<from uri="timer:foo?period=5s"/>-->
  <!--<setBody>-->
  <!--<simple>Hello from Camel!  I love stottie cake and pease pudding!</simple>-->
  <!--</setBody>-->
  <!--<log message=">>> ${body} : ${sys.runtime.id}"/>-->
  <!--</route>-->
  <!--</camelContext>-->


</blueprint>
